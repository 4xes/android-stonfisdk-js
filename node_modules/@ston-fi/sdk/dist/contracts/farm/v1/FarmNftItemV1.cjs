"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const a=require("tonweb"),l=require("../../../StonApiClient.cjs"),w=require("../../../utils/parseBoolean.cjs"),i=require("../constants.cjs"),{boc:{Cell:u},utils:{BN:o,Address:d},token:{nft:{NftItem:g}}}=a,r=class c extends g{constructor({tonApiClient:t,stonApiClient:e,gasConstants:n,...s}){super(t,s),this.stonApiClient=e??new l.StonApiClient(t),this.gasConstants={...c.gasConstants,...n}}async createClaimRewardsBody(t){const e=new u;return e.bits.writeUint(i.FARM_OP_CODES.CLAIM_REWARDS,32),e.bits.writeUint((t==null?void 0:t.queryId)??0,64),e}async buildClaimRewardsTxParams(t){const e=await this.getAddress(),n=await this.createClaimRewardsBody({queryId:t==null?void 0:t.queryId}),s=new o((t==null?void 0:t.gasAmount)??this.gasConstants.claimRewards);return{to:new d(e.toString(!0,!0,!0)),payload:n,gasAmount:s}}async createUnstakeBody(t){const e=new u;return e.bits.writeUint(i.FARM_OP_CODES.UNSTAKE,32),e.bits.writeUint((t==null?void 0:t.queryId)??0,64),e}async buildUnstakeTxParams(t){const e=await this.getAddress(),n=await this.createUnstakeBody({queryId:t==null?void 0:t.queryId}),s=new o((t==null?void 0:t.gasAmount)??this.gasConstants.unstake);return{to:new d(e.toString(!0,!0,!0)),payload:n,gasAmount:s}}async getFarmingData(){const t=await this.getAddress(),e=await this.provider.call2(t.toString(),"get_farming_data");return{status:e[0].toNumber(),isSoulbound:w.parseBoolean(e[1]),stakedTokens:e[2],claimedPerUnitNanorewards:e[3]}}};r.version=i.FARM_VERSION.v1;r.gasConstants={claimRewards:new o("300000000"),unstake:new o("400000000"),destroy:new o("50000000")};let y=r;exports.FarmNftItemV1=y;
//# sourceMappingURL=FarmNftItemV1.cjs.map
