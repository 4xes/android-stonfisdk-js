"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});require("tonweb");const t=require("../../../utils/parseAddress.cjs"),a=require("../../../utils/parseBoolean.cjs"),n=require("../../../utils/parseString.cjs"),d=require("../constants.cjs"),o=require("../v1/FarmNftMinterV1.cjs");class s extends o.FarmNftMinterV1{async getPendingData(){const r=await this.getAddress(),e=await this.provider.call2(r.toString(),"get_pending_data");return{changeCustodianTs:e[0],sendMsgTs:e[1],codeUpgradeTs:e[2],newCustodian:t.parseAddress(e[3]),pendingMsg:e[4],newCode:e[5],newStorage:e[6]}}async getVersion(){const r=await this.getAddress(),e=await this.provider.call2(r.toString(),"get_version");return{major:e[0].toNumber(),minor:e[1].toNumber(),development:n.parseString(e[2])}}async getData(){const r=await this.getAddress(),e=await this.provider.call2(r.toString(),"get_farming_minter_data");return{nextItemIndex:e[0],lastUpdateTime:e[1],status:e[2].toNumber(),depositedNanorewards:e[3],currentStakedTokens:e[4],accruedPerUnitNanorewards:e[5],claimedFeeNanorewards:e[6],accruedFeeNanorewards:e[7],accruedNanorewards:e[8],claimedNanorewards:e[9],contractUniqueId:e[10],nanorewardsPer24h:e[11],adminFee:e[12],minStakeTime:e[13],stakingTokenWallet:t.parseAddressNotNull(e[14]),rewardTokenWallet:t.parseAddressNotNull(e[15]),custodianAddress:t.parseAddress(e[16]),canChangeCustodian:a.parseBoolean(e[17]),canSendRawMsg:a.parseBoolean(e[18]),canChangeFee:a.parseBoolean(e[19]),unrestrictedDepositRewards:a.parseBoolean(e[20]),soulboundItems:!0}}}s.version=d.FARM_VERSION.v2;exports.FarmNftMinterV2=s;
//# sourceMappingURL=FarmNftMinterV2.cjs.map
