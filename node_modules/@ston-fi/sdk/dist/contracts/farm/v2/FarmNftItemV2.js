import s from "tonweb";
import { createSbtDestroyMessage as n } from "../../../utils/createSbtDestroyMessage.js";
import { FARM_VERSION as i } from "../constants.js";
import { FarmNftItemV1 as d } from "../v1/FarmNftItemV1.js";
const {
  boc: { Cell: w },
  utils: { BN: u, Address: c }
} = s;
class a extends d {
  async createDestroyBody(t) {
    return n({
      queryId: (t == null ? void 0 : t.queryId) ?? 0
    });
  }
  /**
   * Build all data required to execute a `destroy` transaction.
   *
   * @param {BN | number | string | undefined} params.gasAmount - Optional; amount of gas for the transaction (in nanoTons)
   * @param {BN | number | undefined} params.queryId - Optional; query id
   *
   * @returns {MessageData} all data required to execute a `destroy` transaction.
   */
  async buildDestroyTxParams(t) {
    const e = await this.getAddress(), o = await this.createDestroyBody({ queryId: t == null ? void 0 : t.queryId }), r = new u((t == null ? void 0 : t.gasAmount) ?? this.gasConstants.destroy);
    return {
      to: new c(e.toString(!0, !0, !0)),
      payload: o,
      gasAmount: r
    };
  }
  /**
   * @returns structure containing current state of the farm NFT
   *
   * @property {number} status Status of the contract: uninitialized `0`, active `1`, unstaked `2`, claiming `3`
   * @property {BN} revokeTime Timestamp of unstake
   * @property {BN} stakedTokens Amount of staked tokens
   * @property {BN} claimedPerUnitNanorewards `accrued_per_unit_nanorewards` at the time the user made the stake or last claimed rewards
   * @property {BN} stakeDate Timestamp in which the owner started staking
   * @property {boolean} isSoulbound If nft is soulbound; Always true in V2
   */
  async getFarmingData() {
    const t = await this.getAddress(), e = await this.provider.call2(
      t.toString(),
      "get_farming_data"
    );
    return {
      status: e[0].toNumber(),
      revokeTime: e[1],
      stakedTokens: e[2],
      claimedPerUnitNanorewards: e[3],
      stakeDate: e[4],
      isSoulbound: !0
      // NFTs are always soulbound in V2
    };
  }
}
a.version = i.v2;
export {
  a as FarmNftItemV2
};
//# sourceMappingURL=FarmNftItemV2.js.map
