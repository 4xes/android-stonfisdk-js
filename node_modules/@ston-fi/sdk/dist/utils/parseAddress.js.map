{"version":3,"file":"parseAddress.js","sources":["../../src/utils/parseAddress.ts"],"sourcesContent":["import TonWeb from \"tonweb\";\n\nimport type { Address, Cell } from \"@/types\";\n\nconst { Address } = TonWeb;\n\nconst readIntFromBitString = (\n  bs: Cell[\"bits\"],\n  cursor: number,\n  bits: number,\n) => {\n  let n = BigInt(0);\n\n  for (let i = 0; i < bits; i++) {\n    n *= BigInt(2);\n    n += BigInt(bs.get(cursor + i));\n  }\n\n  return n;\n};\n\nexport const parseAddress = (cell: Cell): Address | null => {\n  try {\n    let n = readIntFromBitString(cell.bits, 3, 8);\n\n    if (n > BigInt(127)) {\n      n = n - BigInt(256);\n    }\n\n    const hashPart = readIntFromBitString(cell.bits, 3 + 8, 256);\n\n    if (`${n.toString(10)}:${hashPart.toString(16)}` === \"0:0\") {\n      return null;\n    }\n\n    const s = `${n.toString(10)}:${hashPart.toString(16).padStart(64, \"0\")}`;\n\n    return new Address(s);\n  } catch {\n    return null;\n  }\n};\n\nexport const parseAddressNotNull = (cell: Cell): Address => {\n  const address = parseAddress(cell);\n\n  if (!address) {\n    throw new Error(`Failed to parse address from cell: ${cell}`);\n  }\n\n  return address;\n};\n"],"names":["Address","TonWeb","readIntFromBitString","bs","cursor","bits","i","parseAddress","cell","n","hashPart","s","parseAddressNotNull","address"],"mappings":";AAIA,MAAM,EAAE,SAAAA,EAAY,IAAAC,GAEdC,IAAuB,CAC3BC,GACAC,GACAC,MACG;AACC,MAAA,IAAI,OAAO,CAAC;AAEhB,WAASC,IAAI,GAAGA,IAAID,GAAMC;AACxB,SAAK,OAAO,CAAC,GACb,KAAK,OAAOH,EAAG,IAAIC,IAASE,CAAC,CAAC;AAGzB,SAAA;AACT,GAEaC,IAAe,CAACC,MAA+B;AACtD,MAAA;AACF,QAAIC,IAAIP,EAAqBM,EAAK,MAAM,GAAG,CAAC;AAExC,IAAAC,IAAI,OAAO,GAAG,MACZA,IAAAA,IAAI,OAAO,GAAG;AAGpB,UAAMC,IAAWR,EAAqBM,EAAK,MAAM,IAAI,GAAG,GAAG;AAEvD,QAAA,GAAGC,EAAE,SAAS,EAAE,CAAC,IAAIC,EAAS,SAAS,EAAE,CAAC,MAAO;AAC5C,aAAA;AAGT,UAAMC,IAAI,GAAGF,EAAE,SAAS,EAAE,CAAC,IAAIC,EAAS,SAAS,EAAE,EAAE,SAAS,IAAI,GAAG,CAAC;AAE/D,WAAA,IAAIV,EAAQW,CAAC;AAAA,EAAA,QACd;AACC,WAAA;AAAA,EACT;AACF,GAEaC,IAAsB,CAACJ,MAAwB;AACpD,QAAAK,IAAUN,EAAaC,CAAI;AAEjC,MAAI,CAACK;AACH,UAAM,IAAI,MAAM,sCAAsCL,CAAI,EAAE;AAGvD,SAAAK;AACT;"}