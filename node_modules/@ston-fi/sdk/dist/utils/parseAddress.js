import i from "tonweb";
const { Address: d } = i, o = (r, t, s) => {
  let n = BigInt(0);
  for (let e = 0; e < s; e++)
    n *= BigInt(2), n += BigInt(r.get(t + e));
  return n;
}, a = (r) => {
  try {
    let t = o(r.bits, 3, 8);
    t > BigInt(127) && (t = t - BigInt(256));
    const s = o(r.bits, 3 + 8, 256);
    if (`${t.toString(10)}:${s.toString(16)}` == "0:0")
      return null;
    const n = `${t.toString(10)}:${s.toString(16).padStart(64, "0")}`;
    return new d(n);
  } catch {
    return null;
  }
}, c = (r) => {
  const t = a(r);
  if (!t)
    throw new Error(`Failed to parse address from cell: ${r}`);
  return t;
};
export {
  a as parseAddress,
  c as parseAddressNotNull
};
//# sourceMappingURL=parseAddress.js.map
