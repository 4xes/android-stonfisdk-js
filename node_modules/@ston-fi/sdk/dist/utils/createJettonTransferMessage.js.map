{"version":3,"file":"createJettonTransferMessage.js","sources":["../../src/utils/createJettonTransferMessage.ts"],"sourcesContent":["import TonWeb from \"tonweb\";\n\nimport type { AddressType, QueryIdType, AmountType, Cell } from \"@/types\";\n\nconst {\n  utils: { BN },\n  boc: { Cell },\n  Address,\n} = TonWeb;\n\n/**\n * Implements `transfer` function from Jettons Standard.\n * [Docs](https://github.com/ton-blockchain/TEPs/blob/master/text/0074-jettons-standard.md#1-transfer)\n *\n * ```TL-B\n * transfer#0f8a7ea5 query_id:uint64 amount:(VarUInteger 16) destination:MsgAddress response_destination:MsgAddress custom_payload:(Maybe ^Cell) forward_ton_amount:(VarUInteger 16) forward_payload:(Either Cell ^Cell) = InternalMsgBody;\n * ```\n */\nexport function createJettonTransferMessage(params: {\n  queryId: QueryIdType;\n  amount: AmountType;\n  destination: AddressType;\n  responseDestination?: AddressType;\n  customPayload?: Cell;\n  forwardTonAmount: AmountType;\n  forwardPayload?: Cell;\n}) {\n  const message = new Cell();\n\n  message.bits.writeUint(0xf8a7ea5, 32);\n  message.bits.writeUint(params.queryId, 64);\n  message.bits.writeCoins(new BN(params.amount));\n  message.bits.writeAddress(new Address(params.destination));\n  message.bits.writeAddress(\n    params.responseDestination\n      ? new Address(params.responseDestination)\n      : undefined,\n  );\n\n  if (params.customPayload) {\n    message.refs.push(params.customPayload);\n    message.bits.writeBit(true);\n  } else {\n    message.bits.writeBit(false);\n  }\n\n  message.bits.writeCoins(new BN(params.forwardTonAmount));\n\n  if (params.forwardPayload) {\n    message.refs.push(params.forwardPayload);\n    message.bits.writeBit(true);\n  } else {\n    message.bits.writeBit(false);\n  }\n\n  return message;\n}\n"],"names":["BN","Cell","Address","TonWeb","createJettonTransferMessage","params","message"],"mappings":";AAIA,MAAM;AAAA,EACJ,OAAO,EAAE,IAAAA,EAAG;AAAA,EACZ,KAAK,EAAE,MAAAC,EAAK;AAAA,EACZ,SAAAC;AACF,IAAIC;AAUG,SAASC,EAA4BC,GAQzC;AACK,QAAAC,IAAU,IAAIL;AAEZ,SAAAK,EAAA,KAAK,UAAU,WAAW,EAAE,GACpCA,EAAQ,KAAK,UAAUD,EAAO,SAAS,EAAE,GACzCC,EAAQ,KAAK,WAAW,IAAIN,EAAGK,EAAO,MAAM,CAAC,GAC7CC,EAAQ,KAAK,aAAa,IAAIJ,EAAQG,EAAO,WAAW,CAAC,GACzDC,EAAQ,KAAK;AAAA,IACXD,EAAO,sBACH,IAAIH,EAAQG,EAAO,mBAAmB,IACtC;AAAA,EAAA,GAGFA,EAAO,iBACDC,EAAA,KAAK,KAAKD,EAAO,aAAa,GAC9BC,EAAA,KAAK,SAAS,EAAI,KAElBA,EAAA,KAAK,SAAS,EAAK,GAG7BA,EAAQ,KAAK,WAAW,IAAIN,EAAGK,EAAO,gBAAgB,CAAC,GAEnDA,EAAO,kBACDC,EAAA,KAAK,KAAKD,EAAO,cAAc,GAC/BC,EAAA,KAAK,SAAS,EAAI,KAElBA,EAAA,KAAK,SAAS,EAAK,GAGtBA;AACT;"}